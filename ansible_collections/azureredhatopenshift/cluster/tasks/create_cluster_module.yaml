- name: cluster_create_module | Create aro cluster
  azureredhatopenshift.cluster.azure_rm_openshiftmanagedcluster:
    api_version: "{{ aro_api_version | d(omit) }}"
    rp_mode: "{{ rp_mode | default(omit) }}"
    name: "{{ name }}"
    resource_group: "{{ resource_group }}"
    location: "{{ location }}"
    api_server_profile:
      visibility: "{{ apiserver_visibility | d(omit) }}"
    cluster_profile:
      cluster_resource_group_id: "{{ cluster_resource_group | d(omit) }}"
      domain: "{{ domain | d(omit) }}"
      fips_validated_modules: "{{ fips_validated_modules | d(omit) }}"
      version: "{{ version | d(omit) }}"
    identity:
      type: "{% if user_assigned_identities is defined %}UserAssigned{% else %}{{ omit }}{% endif %}" # Only UserAssigned is supported
      user_assigned_identities: "{{ user_assigned_identities | d(omit) }}"
    platform_workload_identity_profile:
      upgradeable_to: "{{ omit }}"
      platform_workload_identities: "{{ platform_workload_identities | d(omit) }}"
    ingress_profiles:
      - visibility: "{{ ingress_visibility | d('Public') }}"
    master_profile:
      vm_size: "{{ master_vm_size | d(omit) }}"
      subnet_id: "{{ master_subnet_state.state.id }}"
      encryption_at_host: "{% if master_encryption_at_host | d(False) %}Enabled{% else %}Disabled{% endif %}"
      disk_encryption_set_id: "{{ byok_des_status.state.id | d(omit) }}"
    network_profile:
      pod_cidr: "{{ pod_cidr | d(omit) }}"
      service_cidr: "{{ service_cidr | d(omit) }}"
      outbound_type: "{{ outbound_type | d(omit) }}"
      preconfigured_nsg: "{{ enable_preconfigured_nsg | d(omit) }}"
      load_balancer_profile:
        managed_outbound_ips:
          count: "{{ lb_ip_count | d(omit) }}"
    service_principal_profile:
      client_id: "{{ csp_info.appId | d(omit) }}"
      client_secret: "{{ csp_info.password | d(omit) }}"
    tags:
      createdby: "{{ currentuser_info.userPrincipalName | default(lookup('env', 'AZURE_CLIENT_ID')) | default('unknown') }}"
      createdwith: ansible
      purge: "true"
    worker_profiles:
      - name: worker
        vm_size: "{{ worker_vm_size | d(omit) }}"
        subnet_id: "{{ worker_subnet_state.state.id }}"
        disk_size: "{{ worker_disk_size | d(omit) }}"
        count: "{{ worker_count | d(omit) }}"
        encryption_at_host: "{% if worker_encryption_at_host | d(False) %}Enabled{% else %}Disabled{% endif %}"
        disk_encryption_set_id: "{{ byok_des_status.state.id | d(omit) }}"
  delegate_to: localhost
  register: aro_cluster_state
- debug: var=aro_cluster_state
