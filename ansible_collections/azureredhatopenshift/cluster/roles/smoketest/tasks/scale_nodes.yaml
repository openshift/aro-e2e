- name: scale_nodes | Get machinesets
  kubernetes.core.k8s_info:
    ca_cert: "{{ cluster_cert_file }}"
    kubeconfig: "{{ inventory_hostname }}.kubeconfig"
    api_version: machine.openshift.io/v1beta1
    namespace: openshift-machine-api
    kind: MachineSet
  delegate_to: "{{ delegation }}"
  register: oc_get_machineset

- name: scale_nodes | Create zero-scaled machineset
  kubernetes.core.k8s:
    ca_cert: "{{ cluster_cert_file }}"
    kubeconfig: "{{ inventory_hostname }}.kubeconfig"
    state: present
    api_version: machine.openshift.io/v1beta1
    namespace: openshift-machine-api
    kind: MachineSet
    name: "{{ machineset.metadata.name }}-zero"
    resource_definition:
      metadata:
        annotations: "{{ machineset.metadata.annotations }}"
        labels: "{{ machineset.metadata.labels }}"
      spec:
        replicas: 0
        selector:
          matchLabels:
            "machine.openshift.io/cluster-api-cluster": "{{ machineset.spec.selector.matchLabels['machine.openshift.io/cluster-api-cluster'] }}"
            "machine.openshift.io/cluster-api-machineset": "{{ machineset.metadata.name }}-zero"
        template:
          metadata:
            labels:
              "machine.openshift.io/cluster-api-cluster": "{{ machineset.spec.template.metadata.labels['machine.openshift.io/cluster-api-cluster'] }}"
              "machine.openshift.io/cluster-api-machineset": "{{ machineset.metadata.name }}-zero"
          spec: "{{ machineset.spec.template.spec }}"
  vars:
    machineset: "{{ oc_get_machineset.resources[0] }}"
  delegate_to: "{{ delegation }}"
  when: oc_get_machineset.resources | length > 0

- name: scale_nodes | Select a machineset to scale
  ansible.builtin.set_fact:
    candidate_machineset: "{{ oc_get_machineset.resources[0] }}"
- name: scale_nodes | Show selected machineset
  ansible.builtin.debug:
    msg: "Scaling will be performed on {{ candidate_machineset.metadata.name }}"

- name: scale_nodes | Scale down machineset
  kubernetes.core.k8s:
    ca_cert: "{{ cluster_cert_file }}"
    kubeconfig: "{{ inventory_hostname }}.kubeconfig"
    state: patched
    api_version: machine.openshift.io/v1beta1
    namespace: openshift-machine-api
    kind: MachineSet
    name: "{{ candidate_machineset.metadata.name }}"
    resource_definition:
      spec:
        replicas: 0
  delegate_to: "{{ delegation }}"

- name: scale_nodes | Wait for scale down
  kubernetes.core.k8s_info:
    ca_cert: "{{ cluster_cert_file }}"
    kubeconfig: "{{ inventory_hostname }}.kubeconfig"
    api_version: machine.openshift.io/v1beta1
    namespace: openshift-machine-api
    kind: MachineSet
    name: "{{ candidate_machineset.metadata.name }}"
  delegate_to: "{{ delegation }}"
  register: oc_get_machineset_item
  failed_when: oc_get_machineset_item.resources[0].status.replicas != 0
  retries: 10
  delay: 60

- name: scale_nodes | Scale up machineset
  kubernetes.core.k8s:
    ca_cert: "{{ cluster_cert_file }}"
    kubeconfig: "{{ inventory_hostname }}.kubeconfig"
    state: patched
    api_version: machine.openshift.io/v1beta1
    namespace: openshift-machine-api
    kind: MachineSet
    name: "{{ candidate_machineset.metadata.name }}"
    resource_definition:
      spec:
        replicas: 1
  delegate_to: "{{ delegation }}"

- name: scale_nodes | Wait for scale up
  kubernetes.core.k8s_info:
    ca_cert: "{{ cluster_cert_file }}"
    kubeconfig: "{{ inventory_hostname }}.kubeconfig"
    api_version: machine.openshift.io/v1beta1
    namespace: openshift-machine-api
    kind: MachineSet
    name: "{{ candidate_machineset.metadata.name }}"
  delegate_to: "{{ delegation }}"
  register: oc_get_machineset_item
  failed_when: oc_get_machineset_item.resources[0].status.readyReplicas != 1
  retries: 15
  delay: 60
